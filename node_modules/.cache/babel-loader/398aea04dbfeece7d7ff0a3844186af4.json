{"ast":null,"code":"var _jsxFileName = \"/Users/nicklashbrook/coding/chat-react/src/components/Login/Login.jsx\",\n  _s = $RefreshSig$();\nimport { Button, ButtonGroup, Heading, VStack } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport { useNavigate } from \"react-router\";\nimport * as Yup from \"yup\";\n// import TextField from \"./TextField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    validationSchema: Yup.object({\n      username: Yup.string().required(\"Username required!\").min(6, \"Username too short!\").max(28, \"Username too long!\"),\n      password: Yup.string().required(\"Password required!\").min(6, \"Password too short!\").max(28, \"Password too long!\")\n    }),\n    onSubmit: (values, actions) => {\n      alert(JSON.stringify(values, null, 2));\n      actions.resetForm();\n    },\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      as: Form,\n      w: {\n        base: \"90%\",\n        md: \"500px\"\n      },\n      m: \"auto\",\n      justify: \"center\",\n      h: \"100vh\",\n      spacing: \"1rem\",\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"username\",\n        placeholder: \"Enter username\",\n        autoComplete: \"off\",\n        label: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"password\",\n        placeholder: \"Enter password\",\n        autoComplete: \"off\",\n        label: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        pt: \"1rem\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"teal\",\n          type: \"submit\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate(\"/register\"),\n          children: \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Button","ButtonGroup","Heading","VStack","Form","Formik","useNavigate","Yup","jsxDEV","_jsxDEV","Login","_s","navigate","initialValues","username","password","validationSchema","object","string","required","min","max","onSubmit","values","actions","alert","JSON","stringify","resetForm","children","as","w","base","md","m","justify","h","spacing","fileName","_jsxFileName","lineNumber","columnNumber","TextField","name","placeholder","autoComplete","label","pt","colorScheme","type","onClick","_c","$RefreshReg$"],"sources":["/Users/nicklashbrook/coding/chat-react/src/components/Login/Login.jsx"],"sourcesContent":["import { Button, ButtonGroup, Heading, VStack } from \"@chakra-ui/react\";\nimport { Form, Formik } from \"formik\";\nimport { useNavigate } from \"react-router\";\nimport * as Yup from \"yup\";\n// import TextField from \"./TextField\";\n\nconst Login = () => {\n  const navigate = useNavigate();\n  return (\n    <Formik\n      initialValues={{ username: \"\", password: \"\" }}\n      validationSchema={Yup.object({\n        username: Yup.string()\n          .required(\"Username required!\")\n          .min(6, \"Username too short!\")\n          .max(28, \"Username too long!\"),\n        password: Yup.string()\n          .required(\"Password required!\")\n          .min(6, \"Password too short!\")\n          .max(28, \"Password too long!\"),\n      })}\n      onSubmit={(values, actions) => {\n        alert(JSON.stringify(values, null, 2));\n        actions.resetForm();\n      }}\n    >\n      <VStack\n        as={Form}\n        w={{ base: \"90%\", md: \"500px\" }}\n        m=\"auto\"\n        justify=\"center\"\n        h=\"100vh\"\n        spacing=\"1rem\"\n      >\n        <Heading>Log In</Heading>\n        <TextField\n          name=\"username\"\n          placeholder=\"Enter username\"\n          autoComplete=\"off\"\n          label=\"Username\"\n        />\n\n        <TextField\n          name=\"password\"\n          placeholder=\"Enter password\"\n          autoComplete=\"off\"\n          label=\"Password\"\n        />\n\n        <ButtonGroup pt=\"1rem\">\n          <Button colorScheme=\"teal\" type=\"submit\">\n            Log In\n          </Button>\n          <Button onClick={() => navigate(\"/register\")}>Create Account</Button>\n        </ButtonGroup>\n      </VStack>\n    </Formik>\n  );\n};\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module"}